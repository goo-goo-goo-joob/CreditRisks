# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import calc_service_pb2 as calc__service__pb2


class CalcServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CalcProbability = channel.unary_unary(
        '/calcservice.CalcService/CalcProbability',
        request_serializer=calc__service__pb2.CalcRequest.SerializeToString,
        response_deserializer=calc__service__pb2.CalcReply.FromString,
        )
    self.GetModelInfo = channel.unary_unary(
        '/calcservice.CalcService/GetModelInfo',
        request_serializer=calc__service__pb2.ModelInfoRequest.SerializeToString,
        response_deserializer=calc__service__pb2.ModelInfoReply.FromString,
        )


class CalcServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CalcProbability(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetModelInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalcServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CalcProbability': grpc.unary_unary_rpc_method_handler(
          servicer.CalcProbability,
          request_deserializer=calc__service__pb2.CalcRequest.FromString,
          response_serializer=calc__service__pb2.CalcReply.SerializeToString,
      ),
      'GetModelInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetModelInfo,
          request_deserializer=calc__service__pb2.ModelInfoRequest.FromString,
          response_serializer=calc__service__pb2.ModelInfoReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'calcservice.CalcService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
